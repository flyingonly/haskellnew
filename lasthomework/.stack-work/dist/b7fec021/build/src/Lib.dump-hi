
==================== FINAL INTERFACE ====================
2017-01-15 09:37:39.8155101 UTC

interface lasthomework-0.1.0.0-38Oy90SkoIZ9X1g2jYCTPk:Lib 8001
  interface hash: 635f9507b1848c4930d76b2a37d9a679
  ABI hash: baf4effadd6e3f04a7f87d9acbc1dc56
  export-list hash: 04adde34c95a9ef9a6a10e6622365de4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 36f5ed5780f13d451f8563110c8a6d30
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.addParser
  Lib.andParser
  Lib.beginParser
  Lib.carParser
  Lib.cdrParser
  Lib.charParser
  Lib.consParser
  Lib.defMain
  Lib.divParser
  Lib.eqParser
  Lib.eval
  Lib.evalWithErrorThrowing
  Lib.evalw
  Lib.evalwWithErrorThrowing
  Lib.exprParser
  Lib.falseParser
  Lib.greaterParser
  Lib.greatereqParser
  Lib.ifParser
  Lib.lessParser
  Lib.lesseqParser
  Lib.lexeme
  Lib.minusParser
  Lib.multParser
  Lib.nilParser
  Lib.notParser
  Lib.numParser
  Lib.orParser
  Lib.parseField
  Lib.parseFlag
  Lib.parseInPath
  Lib.parseOption
  Lib.parseOutPath
  Lib.setParser
  Lib.skipParser
  Lib.statParser
  Lib.stringParser
  Lib.testResult
  Lib.trans
  Lib.trueParser
  Lib.variableParser
  Lib.variableonlyParser
  Lib.whileParser
  Lib.Expr{Lib.Add Lib.And Lib.Car Lib.Cdr Lib.CharLit Lib.Cons Lib.Div Lib.Eq Lib.FalseLit Lib.Greater Lib.GreaterEq Lib.Less Lib.LessEq Lib.Minus Lib.Mult Lib.Nil Lib.Not Lib.NumLit Lib.Or Lib.TrueLit Lib.VarRef}
  Lib.Mem
  Lib.MyResult{Lib.BoolResult Lib.CharResult Lib.ConsResult Lib.FailResult Lib.NilResult Lib.NumResult}
  Lib.Option{Lib.Option inPath outPath}
  Lib.Parser1
  Lib.Prog
  Lib.Statment{Lib.If Lib.Set Lib.Skip Lib.Statmentlist Lib.While}
  Lib.Var
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe*
                      base-4.9.0.0* binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      scientific-0.3.4.9@scientific-0.3.4.9-ENrtAw13zTS8y4klTK3l4D
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs*
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Functor.Identity base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Combinator 80078211c3063adcfabc099c19aa9586
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text 3fafd4cecfbf70a4b0cc52719e7602b9
import  -/  attoparsec-0.13.1.0@attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe:Data.Attoparsec.Text.Internal e682a9f2864a8ebe8143367ebe6e5446
import  -/  base-4.9.0.0:Control.Applicative fdcece230f8af145aec7b432bfe73083
import  -/  base-4.9.0.0:Control.Exception.Base 0f704105a0b2c9a9a0b50fdf0b35065d
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.Functor 67cebb006c069ea73adcd2d468cdb0dc
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.IO 1429985c1cb03cc0778fa4876799f1d2
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Real 011de9ca3282ad24a84e4e15f974f98e
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.Environment b460b4a8ded59bf876fca87a5a3550f2
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 59ba4f128d7d19046010538c416f3875
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d6db6ac95571c976686f97c64548b060
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.State d851912d62cbc95e043a9cc13c3581de
import  -/  mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM:Control.Monad.State.Class 6b9267d06a66633777f53733046c8d46
import  -/  text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.IO 3a5fa756afb81d5e488e7b14fffb0d67
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy fd06dab0d634fc591e8c33380a9811a8
671e2ff89e7db3166b7129af1a3626c2
  $fShowExpr :: GHC.Show.Show Lib.Expr
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Expr
                  Lib.$fShowExpr_$cshowsPrec
                  Lib.$fShowExpr_$cshow
                  Lib.$fShowExpr_$cshowList -}
671e2ff89e7db3166b7129af1a3626c2
  $fShowExpr1 :: Lib.Expr -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowExpr_$cshowsPrec Lib.$fShowExpr2) -}
4fb03dea36000c21330d7175887f6efc
  $fShowExpr2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
671e2ff89e7db3166b7129af1a3626c2
  $fShowExpr_$cshow :: Lib.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Expr) ->
                 Lib.$fShowExpr_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
671e2ff89e7db3166b7129af1a3626c2
  $fShowExpr_$cshowList :: [Lib.Expr] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Expr Lib.$fShowExpr1) -}
671e2ff89e7db3166b7129af1a3626c2
  $fShowExpr_$cshowsPrec ::
    GHC.Types.Int -> Lib.Expr -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
1e8060567b17528d4b6a8434e73d5998
  $fShowMyResult :: GHC.Show.Show Lib.MyResult
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.MyResult
                  Lib.$fShowMyResult_$cshowsPrec
                  Lib.$fShowMyResult_$cshow
                  Lib.$fShowMyResult_$cshowList -}
1e8060567b17528d4b6a8434e73d5998
  $fShowMyResult1 :: Lib.MyResult -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Lib.$fShowMyResult_$cshowsPrec Lib.$fShowExpr2) -}
1e8060567b17528d4b6a8434e73d5998
  $fShowMyResult_$cshow :: Lib.MyResult -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.MyResult) ->
                 Lib.$fShowMyResult_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1e8060567b17528d4b6a8434e73d5998
  $fShowMyResult_$cshowList :: [Lib.MyResult] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.MyResult
                   Lib.$fShowMyResult1) -}
1e8060567b17528d4b6a8434e73d5998
  $fShowMyResult_$cshowsPrec ::
    GHC.Types.Int -> Lib.MyResult -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
db2a031023e35ab16718e337af6e7a19
  $fShowOption :: GHC.Show.Show Lib.Option
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Option
                  Lib.$fShowOption_$cshowsPrec
                  Lib.$fShowOption_$cshow
                  Lib.$fShowOption_$cshowList -}
db2a031023e35ab16718e337af6e7a19
  $fShowOption1 :: Lib.Option -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Lib.Option) (w1 :: GHC.Base.String) ->
                 case w of ww { Lib.Option ww1 ww2 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
06a593a1fcb3a00005757808dc1772b4
  $fShowOption2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
a0b2750feeb9636a9ec7571cd2cadbd2
  $fShowOption3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "outPath = "#) -}
b32f3054107927d9be807dcb261044ac
  $fShowOption4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
733aa882236929b68e46ada2c6230b6c
  $fShowOption5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "inPath = "#) -}
ef5d0ac34c6cceed74e73ea737810732
  $fShowOption6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Option {"#) -}
db2a031023e35ab16718e337af6e7a19
  $fShowOption_$cshow :: Lib.Option -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Option) ->
                 Lib.$fShowOption_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
db2a031023e35ab16718e337af6e7a19
  $fShowOption_$cshowList :: [Lib.Option] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Option Lib.$fShowOption1) -}
db2a031023e35ab16718e337af6e7a19
  $fShowOption_$cshowsPrec ::
    GHC.Types.Int -> Lib.Option -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Lib.Option)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Option ww3 ww4 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
60b34e7bc8ded7206adb369f8fe05ae7
  $fShowStatment :: GHC.Show.Show Lib.Statment
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Statment
                  Lib.$fShowStatment_$cshowsPrec
                  Lib.$fShowStatment_$cshow
                  Lib.$fShowStatment_$cshowList -}
60b34e7bc8ded7206adb369f8fe05ae7
  $fShowStatment1 :: Lib.Statment -> GHC.Show.ShowS
  {- Arity: 1 -}
60b34e7bc8ded7206adb369f8fe05ae7
  $fShowStatment_$cshow :: Lib.Statment -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Lib.Statment) ->
                 Lib.$fShowStatment_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
60b34e7bc8ded7206adb369f8fe05ae7
  $fShowStatment_$cshowList :: [Lib.Statment] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.Statment
                   Lib.$fShowStatment1) -}
60b34e7bc8ded7206adb369f8fe05ae7
  $fShowStatment_$cshowsPrec ::
    GHC.Types.Int -> Lib.Statment -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
9b754b4fd3dd1df8bcd1b48c63aae240
  $salter_$sgo10 ::
    (GHC.Base.Maybe a1 -> GHC.Base.Maybe a1)
    -> Lib.Var
    -> Data.Map.Base.Map Lib.Var a1
    -> Data.Map.Base.Map Lib.Var a1
  {- Arity: 3, Strictness: <C(S),1*C1(U)><S,1*U><S,1*U> -}
7179ecd8d664aa81a5b38162c0e0307e
  $sfindWithDefault1 ::
    a -> Lib.Var -> Data.Map.Base.Map Lib.Var a -> a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U><S,1*U><S,1*U> -}
74fd7e08d151bcb05cb20dca0044b608
  $tc'Add :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2304872130079842729##
                   9095057023768351548##
                   Lib.$trModule
                   Lib.$tc'Add1) -}
3d711d3fbc8cb8ef0dca7c97f856c446
  $tc'Add1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Add"#) -}
ab377471d8486d15f9d3ae04c2163492
  $tc'And :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13634260832244422718##
                   16941390765221717127##
                   Lib.$trModule
                   Lib.$tc'And1) -}
5c619fca1763011a74fc0e8c47482040
  $tc'And1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'And"#) -}
01d409663265c503ec2ede242892d166
  $tc'BoolResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16432467892685736925##
                   15804740860451644624##
                   Lib.$trModule
                   Lib.$tc'BoolResult1) -}
e8b920b1bb785f849886b8b5758a512a
  $tc'BoolResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'BoolResult"#) -}
90f29bfd515fe0d96b9cf5d06341e89b
  $tc'Car :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14973580091238913753##
                   11435563411968924887##
                   Lib.$trModule
                   Lib.$tc'Car1) -}
d585feb4e6dd1d65919b15885c4adcb3
  $tc'Car1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Car"#) -}
9cc73f206328490fc88b74a7afe96a00
  $tc'Cdr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2769262538894808120##
                   13956307619449071964##
                   Lib.$trModule
                   Lib.$tc'Cdr1) -}
7fefd0cc9463cd91ca4562a3d0267ae0
  $tc'Cdr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cdr"#) -}
7ec04ed1d38e4d115e298ebe11592e43
  $tc'CharLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5616096730825160##
                   11378764574377480935##
                   Lib.$trModule
                   Lib.$tc'CharLit1) -}
50092de6af766f29ac348ae293967807
  $tc'CharLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharLit"#) -}
14a5bce22f13d7b311daa684e6b2d721
  $tc'CharResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9366589364289508321##
                   17443722932932445498##
                   Lib.$trModule
                   Lib.$tc'CharResult1) -}
960959f508fed66335e9664e73ea39ea
  $tc'CharResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CharResult"#) -}
f6e031fef8d9eafbdab694a16d1b2b0b
  $tc'Cons :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   875969796960194081##
                   3393279423088303481##
                   Lib.$trModule
                   Lib.$tc'Cons1) -}
e990d0fe2b5f837da03ca2264610b58e
  $tc'Cons1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cons"#) -}
3eeb19f4c07acf19d06c5d2e08656727
  $tc'ConsResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2013725926116603149##
                   12854960804147243617##
                   Lib.$trModule
                   Lib.$tc'ConsResult1) -}
2b75343d97c1c07bce8ad066e223a377
  $tc'ConsResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ConsResult"#) -}
7aad51052b7449061b03ca41a5f01b12
  $tc'Div :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13733582507109412773##
                   7296929478461727149##
                   Lib.$trModule
                   Lib.$tc'Div1) -}
74138084c1d81d5b0175cb2872eefabc
  $tc'Div1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Div"#) -}
e74b2eeafe2c47f02c10d62a3b2dc7d2
  $tc'Eq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15270720350610642370##
                   116709324163577149##
                   Lib.$trModule
                   Lib.$tc'Eq1) -}
39ecb9915978927c1ee69e2a3c4ab034
  $tc'Eq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Eq"#) -}
bdd5668fcb04a8ee9479bbe31c691fda
  $tc'FailResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15550614310938694818##
                   3331097682978920372##
                   Lib.$trModule
                   Lib.$tc'FailResult1) -}
926a12d55104dd273cdc8b1dda51804b
  $tc'FailResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FailResult"#) -}
7146f660d62d7d5030da722466293a79
  $tc'FalseLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14544375452286800205##
                   3761716168818368482##
                   Lib.$trModule
                   Lib.$tc'FalseLit1) -}
116a484f7005aec64aba7496a9646d0c
  $tc'FalseLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'FalseLit"#) -}
e3a48079b311832c5473301e95075440
  $tc'Greater :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16902341396678896199##
                   2546283843245096681##
                   Lib.$trModule
                   Lib.$tc'Greater1) -}
adb1830de94741b533cbd0567d52435b
  $tc'Greater1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Greater"#) -}
bb93494b8535553d3017620cca0d4114
  $tc'GreaterEq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3067001517635087629##
                   11145198660085126353##
                   Lib.$trModule
                   Lib.$tc'GreaterEq1) -}
31a451b7999d09c73a648022e989b490
  $tc'GreaterEq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'GreaterEq"#) -}
516ccef4d5046948af07bfea373928de
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17730054813469053388##
                   14972745002007611958##
                   Lib.$trModule
                   Lib.$tc'If1) -}
1f113052e1b21d9124bcd7344ec964e7
  $tc'If1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'If"#) -}
77ffe24fe22c271793d3e75866e25299
  $tc'Less :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10526243027565644350##
                   11325345774670054117##
                   Lib.$trModule
                   Lib.$tc'Less1) -}
f965248a8c734dbd6e7da4eacc601df0
  $tc'Less1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Less"#) -}
6a4a9a285ae14871fa2618efa6a95639
  $tc'LessEq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9410879239318059580##
                   7109012895377216231##
                   Lib.$trModule
                   Lib.$tc'LessEq1) -}
b6abd8596da307f2aa689703ab4d7bba
  $tc'LessEq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LessEq"#) -}
f6562121189b4109d094e545c873cd7a
  $tc'Minus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1987061681791350787##
                   16806758748699954403##
                   Lib.$trModule
                   Lib.$tc'Minus1) -}
a9759742bc326360fec546ceffad9454
  $tc'Minus1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Minus"#) -}
b12078880f6d16ae38a3d84fb2d8be35
  $tc'Mult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12320532215551439662##
                   3450602934242001159##
                   Lib.$trModule
                   Lib.$tc'Mult1) -}
2b3d7952fe1e48b5182864274f3a7af7
  $tc'Mult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mult"#) -}
1b769303b05ec1da6a6834055c5f813a
  $tc'Nil :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   863817713779619917##
                   13045575604480101435##
                   Lib.$trModule
                   Lib.$tc'Nil1) -}
1c779c9692b1edafced9d17b9b994e1e
  $tc'Nil1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Nil"#) -}
7ab2179ac3e4d85df69a0157a45888a8
  $tc'NilResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15410430184307360473##
                   5287194024418673270##
                   Lib.$trModule
                   Lib.$tc'NilResult1) -}
4babb5261d3433070c4a6da6b9a8bc84
  $tc'NilResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NilResult"#) -}
55bae0ac877ce1384677b97aeb71f481
  $tc'Not :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12706570412752937195##
                   13042550923057634997##
                   Lib.$trModule
                   Lib.$tc'Not1) -}
1f07d3ad2674aff02ad8df8dcd54aa72
  $tc'Not1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Not"#) -}
33e24f2a1aa653fa250726eb0b297acf
  $tc'NumLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10429539388862877643##
                   3759847281040708198##
                   Lib.$trModule
                   Lib.$tc'NumLit1) -}
5fb672a32b1c73763beb184960e2b027
  $tc'NumLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NumLit"#) -}
177c25aff274fba07e211917fac48c42
  $tc'NumResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13405900388700850310##
                   6019684869045599000##
                   Lib.$trModule
                   Lib.$tc'NumResult1) -}
dc54e3bfea3522938233e82aa78bbea2
  $tc'NumResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NumResult"#) -}
cafd26b0214975ec730b40b0a037f913
  $tc'Option :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16378894322177145114##
                   13110643147102878480##
                   Lib.$trModule
                   Lib.$tc'Option1) -}
44b55582ca9642422db0591a14ff9e6d
  $tc'Option1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Option"#) -}
cb625c7721f2782e876a2db957fc8da5
  $tc'Or :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11934760199245012240##
                   14344291200624182054##
                   Lib.$trModule
                   Lib.$tc'Or1) -}
caf03ef0492004b11835a3e3a258a2b2
  $tc'Or1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Or"#) -}
4660483c9f701027f13728652d67427b
  $tc'Set :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10995033476623468922##
                   16310851683694170423##
                   Lib.$trModule
                   Lib.$tc'Set1) -}
afb86aa4fcc668e4a3ac8dce812fbf2a
  $tc'Set1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Set"#) -}
21ace21630f6c376033e411a016ec78f
  $tc'Skip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5651140287519142786##
                   12650311507282252850##
                   Lib.$trModule
                   Lib.$tc'Skip1) -}
6dc52505ed9ac3ba4b6d35e48d49da64
  $tc'Skip1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Skip"#) -}
77bf5604e336991800dfde7c1c179e12
  $tc'Statmentlist :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1540363260181089817##
                   14075061438072282025##
                   Lib.$trModule
                   Lib.$tc'Statmentlist1) -}
bba6fb998ca0fbfaef276665571a4b09
  $tc'Statmentlist1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Statmentlist"#) -}
155a6c022f586f83c7c0286793b7efa4
  $tc'TrueLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9461767476193441992##
                   131917785286489153##
                   Lib.$trModule
                   Lib.$tc'TrueLit1) -}
b06a35b31b3eb3847118eb99134056c4
  $tc'TrueLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TrueLit"#) -}
40b688a41ef9d06c0c60b04403475a43
  $tc'VarRef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9594964283056293216##
                   5386574891047236951##
                   Lib.$trModule
                   Lib.$tc'VarRef1) -}
5524f2f2876ad39df1aeb288cfbbabd4
  $tc'VarRef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'VarRef"#) -}
e252b068676917b03cb985467adbae4c
  $tc'While :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15657028731282974285##
                   10286021085814559010##
                   Lib.$trModule
                   Lib.$tc'While1) -}
0b1bfeb31c0a21e088069df72c515dc1
  $tc'While1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'While"#) -}
19cba7dfbff6ab5440ad37ad71eb236c
  $tcExpr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10173918999615931263##
                   9339547063406741659##
                   Lib.$trModule
                   Lib.$tcExpr1) -}
c1907a20ede3f4cef2a3b4832ffbf481
  $tcExpr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Expr"#) -}
f8c40ec4376c6a38c9c997cefbe649d9
  $tcMyResult :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   369002932403923457##
                   1634422313252888281##
                   Lib.$trModule
                   Lib.$tcMyResult1) -}
55cd212a89714baefc7e4ace2feaa0e6
  $tcMyResult1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "MyResult"#) -}
11ab1283973a858103131eb8d9fb4474
  $tcOption :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3521355721687974612##
                   18170594593593869095##
                   Lib.$trModule
                   Lib.$tcOption1) -}
8acd7a61ba28cb61ff5c456e5a6d61f3
  $tcOption1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Option"#) -}
2d53704abf16f2b1058a1b13844ef78c
  $tcStatment :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18435709447570829379##
                   17321381747775109421##
                   Lib.$trModule
                   Lib.$tcStatment1) -}
417c811aeece36eef3b60ab2271d3eba
  $tcStatment1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Statment"#) -}
4c379ccb7bb41879e85d683b964985ac
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
2e8abbbd379b1ef4bca26f14a12abf5b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
c88e00073be66684252854049256a810
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "lasthomework-0.1.0.0-38Oy90SkoIZ9X1g2jYCTPk"#) -}
bb60fdac283e688d6a49af35aa77df7a
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowOption6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowOption5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Lib.$fShowOption4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowOption3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Lib.$fShowOption2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
eadb53195cbe8597b3dd5dff5ed035c9
  $waddParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
8d01acd949d3c8e5adc589093927bd36
  $wandParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
2a27b5235eb89a33d5e87ec189258752
  $wbeginParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0b8edccf3babcb93c2cb7cacc8b6c97b
  $wcarParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ab489bd38bb845f3f63aee96a779a351
  $wcdrParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f015bac6a7a38d45bdcafa929ddd502b
  $wcharParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
c80a18b7d4675233d3e52ead1eb17c48
  $wconsParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
fff8c01396a42a02fa80e0a7f8eeb3e6
  $wdivParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a2ef469f26815453bafd8906c55333b3
  $weqParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
522a9009161abc0d5a8c7802cc54a9f5
  $wexprParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8, Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U>,
     Inline: [0] -}
149f1ac648e1de05bad517fe6fe386b7
  $wfalseParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
13394b0500a70dccb43495af5d898417
  $wgo1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3504c2c9cf381827d3a5406525cd3aff
  $wgo2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
3f420e645998045a26d1fa6187af6501
  $wgo3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
96c93de8a9780cb165de5224679f5efa
  $wgo4 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         ()
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
96475c44cf82c6160c88a44438767832
  $wgreaterParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
eedd9e529d0baa012015a5b5fd1e11a8
  $wgreatereqParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ec67d21ca22078ac87025ad04b14a38a
  $wifParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
0e45fb8fc3a588cc8f8659cc3c6a425e
  $wlessParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
09065eb16638363a82ee8a4583011b13
  $wlesseqParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
752c92bde32cedc6ba17f5d07ac8389c
  $wlexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       GHC.Prim.ByteArray#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> GHC.Prim.Int#
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 10,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w1 :: Data.Attoparsec.Internal.Types.More)
                   (w2 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w3 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 Lib.$wgo1
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w1
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    w `cast`
                    (Data.Attoparsec.Internal.Types.N:Parser[0]
                         <Data.Text.Internal.Text>_N <a>_R)
                      @ r
                      t'
                      nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                      more'
                      w2
                      w3 })) -}
47fcbe7931f0bb91a6638f9efb669ca9
  $wlvl ::
    Lib.Option
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(1*U,1*U)><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Lib.Option)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        (case ww of wild { Lib.Option ds ds1 -> ds })
                        GHC.IO.IOMode.ReadMode
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Data.Text.IO.getContents2 ipv1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.seq#
                        @ GHC.Base.String
                        @ GHC.Prim.RealWorld
                        (case ipv3 of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                         case Lib.$wstatParser
                                @ Lib.Statment
                                dt
                                dt1
                                dt2
                                dt2
                                0#
                                0#
                                Data.Attoparsec.Internal.Types.Complete
                                (Data.Attoparsec.Text.Internal.failK @ Lib.Statment)
                                  `cast`
                                (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateText[0]))
                                 ->_R <Data.Attoparsec.Internal.Types.Pos
                                       -> Data.Attoparsec.Internal.Types.More
                                       -> [GHC.Base.String]
                                       -> GHC.Base.String
                                       -> Data.Attoparsec.Internal.Types.IResult
                                            Data.Text.Internal.Text Lib.Statment>_R)
                                (Data.Attoparsec.Text.Internal.successK @ Lib.Statment)
                                  `cast`
                                (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateText[0]))
                                 ->_R <Data.Attoparsec.Internal.Types.Pos
                                       -> Data.Attoparsec.Internal.Types.More
                                       -> Lib.Statment
                                       -> Data.Attoparsec.Internal.Types.IResult
                                            Data.Text.Internal.Text Lib.Statment>_R) of wild1 {
                           Data.Attoparsec.Internal.Types.Fail ds ds3 err
                           -> case ds3 of wild2 {
                                []
                                -> Lib.defMain14
                                     @ [GHC.Types.Char]
                                     (GHC.Types.: @ GHC.Types.Char)
                                     err
                                : ipv4 ipv5
                                -> Lib.defMain14
                                     @ [GHC.Types.Char]
                                     (GHC.Types.: @ GHC.Types.Char)
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        (Data.OldList.intercalate_$spoly_go
                                           @ GHC.Types.Char
                                           ipv4
                                           (Data.OldList.prependToAll
                                              @ [GHC.Types.Char]
                                              Lib.defMain13
                                              ipv5))
                                        (GHC.CString.unpackAppendCString# ": "# err)) }
                           Data.Attoparsec.Internal.Types.Partial ipv4
                           -> case GHC.Err.error
                                     @ 'GHC.Types.PtrRepLifted
                                     @ (Data.Either.Either GHC.Base.String Lib.Statment)
                                     Lib.defMain4
                                       `cast`
                                     (Sym (GHC.Classes.N:IP[0]
                                               <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                     Lib.defMain3
                              ret_ty GHC.Base.String
                              of {}
                           Data.Attoparsec.Internal.Types.Done ds a1
                           -> Data.Map.Base.$fShowMap_$cshow
                                @ [GHC.Types.Char]
                                @ Lib.MyResult
                                GHC.Show.$fShow[]_$s$fShow[]1
                                Lib.$fShowMyResult
                                (Lib.evalw a1 (Data.Map.Base.Tip @ Lib.Var @ Lib.MyResult)) } })
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 Control.Exception.Base.bracket1
                   @ GHC.IO.Handle.Types.Handle
                   @ ()
                   @ ()
                   (GHC.IO.Handle.FD.openFile1
                      (case ww of wild { Lib.Option ds ds4 -> ds4 })
                      GHC.IO.IOMode.WriteMode)
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.IO.Handle.Types.Handle>_R))
                   GHC.IO.Handle.hClose1
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (\ (hdl :: GHC.IO.Handle.Types.Handle)[OneShot] ->
                    GHC.IO.Handle.Text.hPutStr1 hdl ipv5)
                     `cast`
                   (<GHC.IO.Handle.Types.Handle>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   ipv4 } } }) -}
da862ba83546dde06f91d673be9929f1
  $wmany_v1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 4,
     Strictness: <L,U(U,U,U,U,U)><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
6f28bceada9862b4f064c2cdc11b45d8
  $wmany_v2 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         [GHC.Types.Char]
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 4,
     Strictness: <L,U(U,U,U,U,U)><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a8f3db7ec62aa6fa8392770de06e9ee7
  $wminusParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
a62ec9d8b264466523fa831423af726a
  $wmultParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
10e6de72b159912978a239a706d275a1
  $wnilParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f22c7f8487a813af653de7ab0012d8ab
  $wnotParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
ff8dfbc5718e82f9c92462b79dc9f71e
  $wnumParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w2 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 let {
                   lvl81 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> GHC.Types.Double
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (a1 :: GHC.Types.Double)[OneShot] ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w2
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       (Lib.NumLit a1) }
                 } in
                 Lib.$wgo2
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    Data.Attoparsec.Text.$wdouble @ r t' ipv1 more' w1 lvl81 })) -}
288af6bb345350e271cd255bfba7895f
  $worParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
e91deac9dd0f3501d310d7dc9ca8389a
  $wsetParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
619ebc859665fc87151c3202fbd42727
  $wskipParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
f91ff6c2dafcf9c7308eabf47bb61906
  $wstatParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,U>,
     Inline: [0] -}
f37fa22ab2b60c7869bb17e1eaab9551
  $wstringParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
957aa7d13c1f315dd70a42b6dd247731
  $wtrueParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
cfe28ed3777e209c8b8eaecef7830c6a
  $wvariableParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 let {
                   lvl81 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> [GHC.Types.Char]
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (a1 :: [GHC.Types.Char])[OneShot] ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w1
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       (Lib.VarRef a1) }
                 } in
                 Lib.$wgo3
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                    Lib.$wmany_v1 @ r t' ww7 more' lvl81 })) -}
529163db426b38e563fcc98e415ecb6f
  $wvariableonlyParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Var
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 8,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ r
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#)
                   (w :: Data.Attoparsec.Internal.Types.More)
                   (w1 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Var
                            r) ->
                 let {
                   lvl81 :: Data.Attoparsec.Internal.Types.State
                              Data.Text.Internal.Text
                            -> Data.Attoparsec.Internal.Types.Pos
                            -> Data.Attoparsec.Internal.Types.More
                            -> [GHC.Types.Char]
                            -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
                     {- Arity: 4 -}
                   = \ (t' :: Data.Attoparsec.Internal.Types.State
                                Data.Text.Internal.Text)
                       (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                       (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                       (a1 :: [GHC.Types.Char])[OneShot] ->
                     case pos'
                            `cast`
                          (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                     w1
                       t'
                       nt1 `cast` (Sym (Data.Attoparsec.Internal.Types.N:Pos[0]))
                       more'
                       a1 }
                 } in
                 Lib.$wgo4
                   @ r
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                    Lib.$wmany_v2 @ r t' ww7 more' lvl81 })) -}
e61ae61411299ad42de63d1be6049b04
  $wwhileParser ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 9,
     Strictness: <S,U><S,U><S,U><L,U><L,U><S,U><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: [0] -}
671e2ff89e7db3166b7129af1a3626c2
  data Expr
    = FalseLit
    | TrueLit
    | Not Lib.Expr
    | And Lib.Expr Lib.Expr
    | Or Lib.Expr Lib.Expr
    | Nil
    | CharLit GHC.Types.Char
    | Cons Lib.Expr Lib.Expr
    | Car Lib.Expr
    | Cdr Lib.Expr
    | NumLit GHC.Types.Double
    | Add Lib.Expr Lib.Expr
    | Minus Lib.Expr Lib.Expr
    | Mult Lib.Expr Lib.Expr
    | Div Lib.Expr Lib.Expr
    | Eq Lib.Expr Lib.Expr
    | Less Lib.Expr Lib.Expr
    | LessEq Lib.Expr Lib.Expr
    | Greater Lib.Expr Lib.Expr
    | GreaterEq Lib.Expr Lib.Expr
    | VarRef Lib.Var
8182c933c2bbc2f10693a3a8357bf973
  type Mem = Data.Map.Base.Map Lib.Var Lib.MyResult
1e8060567b17528d4b6a8434e73d5998
  data MyResult
    = BoolResult GHC.Types.Bool
    | NumResult GHC.Types.Double
    | CharResult GHC.Types.Char
    | NilResult
    | FailResult
    | ConsResult Lib.MyResult Lib.MyResult
db2a031023e35ab16718e337af6e7a19
  data Option
    = Option {inPath :: GHC.Base.String, outPath :: GHC.Base.String}
d64c6941fd7e15b7d850ef4ede242106
  type Parser1 a =
    Control.Monad.Trans.State.Lazy.StateT
      [GHC.Base.String] GHC.Types.IO a
3c2505e1ab3433d1661f29f9ba3248f2
  type Prog = Lib.Statment
60b34e7bc8ded7206adb369f8fe05ae7
  data Statment
    = Statmentlist [Lib.Statment]
    | Set Lib.Var Lib.Expr
    | Skip
    | If Lib.Expr Lib.Statment Lib.Statment
    | While Lib.Expr Lib.Statment
e6098217e40afa216865930c510ae063
  type Var = GHC.Base.String
e0e43787b3d7622ce37c7f5e1ef5b9bf
  addParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.addParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
876fa77bc77ad8173f43a8ea5edb05e8
  addParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$waddParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
f0e7911bfd18720619f1f8a5b55ade3a
  andParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.andParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
936e7c440840aafe8f839519efaedb6d
  andParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wandParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
28ebccb816a703e8c440048d1229b0e4
  beginParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.beginParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
51bcf4610da89bd5afc0d94aac11f9a9
  beginParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wbeginParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
33b90cc34663b05a638626549f622e92
  carParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.carParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
02a46196f0c6cced474efd9443db16dd
  carParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wcarParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
499e5e92c568a40f4e60e31550fece09
  cdrParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.cdrParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
f9616f6f8ba5ef99231a224655918e0f
  cdrParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wcdrParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
3ba97b1cea0768149eb6df692f574fcf
  charParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.charParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
09cec88b1087c0f237842e1a6f786dc5
  charParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wcharParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
69ca82a48f473b142599be498584f02a
  consParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.consParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
b67d22f63cf07cb29a85480c8407fc6b
  consParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wconsParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a5e24f18828f73695b2d1dcdd960aa0c
  defMain :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.defMain1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1bda9cac605f7a698d87712774895ec8
  defMain1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs2 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> case GHC.Environment.getFullArgs1
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case System.Environment.dropRTSArgs ipv3 of wild1 {
                        []
                        -> case GHC.List.scanl2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : ds3 xs
                        -> case Lib.defMain15 xs ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                           Lib.defMain2 ipv5 ipv4 } } }
                   GHC.Base.Just argv
                   -> case argv of wild1 {
                        []
                        -> case GHC.List.scanl2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : ds2 xs
                        -> case Lib.defMain15 xs ipv of ds3 { (#,#) ipv2 ipv3 ->
                           Lib.defMain2 ipv3 ipv2 } } } }) -}
f3bcaf92e5b6db6f26549c941a05c1d4
  defMain10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Attoparsec.Text.Internal"#) -}
c9877042f9e76b483fc7911fd8e7a5c8
  defMain11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "attoparsec-0.13.1.0-2AyzLuPV4T95RcYDl03Ghe"#) -}
d28da94552266adbe3e972a5de3ecdb7
  defMain12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "error"#) -}
dffc426a250c3898e1c85ab85c0ae986
  defMain13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " > "#) -}
955a25da28070830e92be8ad77525dcd
  defMain14 :: (GHC.Types.Char -> b -> b) -> b -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(C1(U))><L,U>,
     Unfolding: (\ @ b
                   (c :: GHC.Types.Char -> b -> b)[OneShot]
                   (n :: b)[OneShot] ->
                 GHC.CString.unpackFoldrCString#
                   @ b
                   "not a valid bool expr: "#
                   c
                   n) -}
3a4ed2377dbb7365d4fdabbbac95821e
  defMain15 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Lib.Option, [GHC.Base.String]) #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (s16 :: [GHC.Base.String])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ (Lib.Option, [GHC.Base.String])
                   @ GHC.Exception.SomeException
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case s16 of wild {
                      []
                      -> case GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ (GHC.Base.String, [GHC.Base.String])
                                Lib.defMain20
                                s
                         ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   (Lib.Option, [GHC.Base.String]) #)
                         of {}
                      : arg args'
                      -> case GHC.Base.eqString arg Lib.defMain18 of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.raiseIO#
                                     @ GHC.Exception.SomeException
                                     @ (GHC.Base.String, [GHC.Base.String])
                                     Lib.defMain20
                                     s
                              ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        (Lib.Option, [GHC.Base.String]) #)
                              of {}
                           GHC.Types.True
                           -> case args' of wild2 {
                                []
                                -> case GHC.Prim.raiseIO#
                                          @ GHC.Exception.SomeException
                                          @ (GHC.Base.String, [GHC.Base.String])
                                          Lib.defMain20
                                          s
                                   ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             (Lib.Option, [GHC.Base.String]) #)
                                   of {}
                                : arg1 args'1
                                -> case args'1 of wild3 {
                                     []
                                     -> case GHC.Prim.raiseIO#
                                               @ GHC.Exception.SomeException
                                               @ (GHC.Base.String, [GHC.Base.String])
                                               Lib.defMain20
                                               s
                                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  (Lib.Option, [GHC.Base.String]) #)
                                        of {}
                                     : arg2 args'2
                                     -> case GHC.Base.eqString arg2 Lib.defMain16 of wild4 {
                                          GHC.Types.False
                                          -> case GHC.Prim.raiseIO#
                                                    @ GHC.Exception.SomeException
                                                    @ (GHC.Base.String, [GHC.Base.String])
                                                    Lib.defMain20
                                                    s
                                             ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (Lib.Option, [GHC.Base.String]) #)
                                             of {}
                                          GHC.Types.True
                                          -> case args'2 of wild5 {
                                               []
                                               -> case GHC.Prim.raiseIO#
                                                         @ GHC.Exception.SomeException
                                                         @ (GHC.Base.String, [GHC.Base.String])
                                                         Lib.defMain20
                                                         s
                                                  ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            (Lib.Option, [GHC.Base.String]) #)
                                                  of {}
                                               : arg3 args'3
                                               -> (# s,
                                                     (Lib.Option arg1 arg3, args'3) #) } } } } } })
                   (\ (e :: GHC.Exception.SomeException)[OneShot]
                      (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case e of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                    case (GHC.Exception.$p1Exception @ e100 $dException1)
                           `cast`
                         (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                           (GHC.Prim.proxy#
                              @ *
                              @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                    case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.eqWord# dt dt2) of wild3 {
                      GHC.Types.False
                      -> GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ (Lib.Option, [GHC.Base.String])
                           wild
                           eta1
                      GHC.Types.True
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                           GHC.Types.False
                           -> GHC.Prim.raiseIO#
                                @ GHC.Exception.SomeException
                                @ (Lib.Option, [GHC.Base.String])
                                wild
                                eta1
                           GHC.Types.True
                           -> case s16 of wild7 {
                                []
                                -> case GHC.Prim.raiseIO#
                                          @ GHC.Exception.SomeException
                                          @ (GHC.Base.String, [GHC.Base.String])
                                          Lib.defMain20
                                          eta1
                                   ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                             (Lib.Option, [GHC.Base.String]) #)
                                   of {}
                                : arg args'
                                -> case GHC.Base.eqString arg Lib.defMain16 of wild8 {
                                     GHC.Types.False
                                     -> case GHC.Prim.raiseIO#
                                               @ GHC.Exception.SomeException
                                               @ (GHC.Base.String, [GHC.Base.String])
                                               Lib.defMain20
                                               eta1
                                        ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                  (Lib.Option, [GHC.Base.String]) #)
                                        of {}
                                     GHC.Types.True
                                     -> case args' of wild9 {
                                          []
                                          -> case GHC.Prim.raiseIO#
                                                    @ GHC.Exception.SomeException
                                                    @ (GHC.Base.String, [GHC.Base.String])
                                                    Lib.defMain20
                                                    eta1
                                             ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       (Lib.Option, [GHC.Base.String]) #)
                                             of {}
                                          : arg1 args'1
                                          -> case args'1 of wild10 {
                                               []
                                               -> case GHC.Prim.raiseIO#
                                                         @ GHC.Exception.SomeException
                                                         @ (GHC.Base.String, [GHC.Base.String])
                                                         Lib.defMain20
                                                         eta1
                                                  ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            (Lib.Option, [GHC.Base.String]) #)
                                                  of {}
                                               : arg2 args'2
                                               -> case GHC.Base.eqString
                                                         arg2
                                                         Lib.defMain18 of wild11 {
                                                    GHC.Types.False
                                                    -> case GHC.Prim.raiseIO#
                                                              @ GHC.Exception.SomeException
                                                              @ (GHC.Base.String, [GHC.Base.String])
                                                              Lib.defMain20
                                                              eta1
                                                       ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 (Lib.Option, [GHC.Base.String]) #)
                                                       of {}
                                                    GHC.Types.True
                                                    -> case args'2 of wild12 {
                                                         []
                                                         -> case GHC.Prim.raiseIO#
                                                                   @ GHC.Exception.SomeException
                                                                   @ (GHC.Base.String,
                                                                      [GHC.Base.String])
                                                                   Lib.defMain20
                                                                   eta1
                                                            ret_ty (# GHC.Prim.State#
                                                                        GHC.Prim.RealWorld,
                                                                      (Lib.Option,
                                                                       [GHC.Base.String]) #)
                                                            of {}
                                                         : arg3 args'3
                                                         -> (# eta1,
                                                               (Lib.Option arg3 arg1,
                                                                args'3) #) } } } } } } } } } } })
                   eta) -}
3ecafcb3dbb561bd41c1afcea117a75f
  defMain16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "--"#
                   Lib.defMain17) -}
68949144c0896f1f65690eae1ac272b3
  defMain17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "out"#) -}
f96bb32a3934f86aa745985ac5e6608d
  defMain18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "--"#
                   Lib.defMain19) -}
963e97c9572669cf5dd83d718cb3125d
  defMain19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
6337a5e3c68e20d65c8927ed8f1359f5
  defMain2 ::
    (Lib.Option, [GHC.Base.String])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(U(1*U,1*U),A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lib.Option, [GHC.Base.String]))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { (,) ww1 ww2 -> Lib.$wlvl ww1 w1 }) -}
f283d405ce64872765c19ac45e21270e
  defMain20 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   Lib.defMain21) -}
0653dcf93a48ffe3b748c16d52eeb565
  defMain21 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Base.$fAlternativeIO3
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
fb215060730d22eb7fc1563e0adcb3cc
  defMain3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "parseOnly: impossible error!"#) -}
c687d7e3c1bd76f5d7e0cc78182e911c
  defMain4 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Lib.defMain12
                   Lib.defMain5
                   GHC.Stack.Types.EmptyCallStack) -}
a5cf9bd413459fca55a4aa9e446b9844
  defMain5 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Lib.defMain11
                   Lib.defMain10
                   Lib.defMain9
                   Lib.defMain8
                   Lib.defMain7
                   Lib.defMain8
                   Lib.defMain6) -}
7f926f43dffedc7e66f6be1ca831c7ad
  defMain6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 74#) -}
46b85427fb20d658be20783f4e2bd4de
  defMain7 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 38#) -}
a5ab6c0e11d69690e8bc4412cd49ffe3
  defMain8 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 477#) -}
d0e6e9089c4684cf7135c94b61566415
  defMain9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ".\\Data\\Attoparsec\\Text\\Internal.hs"#) -}
902d57cdd2778d640226c4b26e773390
  divParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.divParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
b8274c3e1a4eb13739c3f76c7e4f2441
  divParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wdivParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
e73e81800f37367e265be9abf1c0b67a
  eqParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.eqParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
ce6a173c830210c2ebbe5626f1b574a0
  eqParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$weqParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
753ba52f8c7c7f4474ba65d49a7a621e
  eval :: Lib.Mem -> Lib.Expr -> Lib.MyResult
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
e1a40dcb7a6ce2e6975b5c38ca09c23c
  evalWithErrorThrowing ::
    Data.Either.Either GHC.Base.String Lib.Expr -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Either.Either
                            GHC.Base.String Lib.Expr) ->
                 case ds of wild {
                   Data.Either.Left errStr
                   -> GHC.CString.unpackAppendCString#
                        "not a valid bool expr: "#
                        errStr
                   Data.Either.Right expr
                   -> Lib.$fShowMyResult_$cshowsPrec
                        GHC.Show.shows22
                        (Lib.eval (Data.Map.Base.Tip @ Lib.Var @ Lib.MyResult) expr)
                        (GHC.Types.[] @ GHC.Types.Char) }) -}
8ab525dab72f5cae6e607516c6649963
  evalw :: Lib.Prog -> Lib.Mem -> Lib.Mem
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
0dcf2485b6c6c3fc1e4f9cb0757da2aa
  evalwWithErrorThrowing ::
    Data.Either.Either GHC.Base.String Lib.Prog -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Either.Either
                            GHC.Base.String Lib.Prog) ->
                 case ds of wild {
                   Data.Either.Left errStr
                   -> Lib.defMain14
                        @ [GHC.Types.Char]
                        (GHC.Types.: @ GHC.Types.Char)
                        errStr
                   Data.Either.Right prog
                   -> Data.Map.Base.$fShowMap_$cshow
                        @ [GHC.Types.Char]
                        @ Lib.MyResult
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Lib.$fShowMyResult
                        (Lib.evalw prog (Data.Map.Base.Tip @ Lib.Var @ Lib.MyResult)) }) -}
6ebcb5837de5a3c109def19ab5cbb887
  exprParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,A><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.exprParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
e07a699ba9c7ddfb4a864797a8ff260d
  exprParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wexprParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w4 } }) -}
3c730bb70750ba7e74361561a8bf7101
  falseParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lib.falseParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
59576665527240143853ff6c9e825574
  falseParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wfalseParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
97796b7586669af0d71df06bc8c3bf0a
  greaterParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.greaterParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
d28db6a3d2fa21b4216abe8e6d6cbb2c
  greaterParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgreaterParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
d04543f34611155feab95ee18912ab62
  greatereqParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.greatereqParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
f8bec51f82c9a4b7096131f349ca9a10
  greatereqParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgreatereqParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
ec39053b489b0df48047fd9fcd02338c
  ifParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.ifParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
93f5abece35cae4eef88aea00032bc66
  ifParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wifParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
65b1ab18daea5043b462fc44bb8e6bde
  inPath :: Lib.Option -> GHC.Base.String
  RecSel Left Lib.Option
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Option) ->
                 case ds of wild { Lib.Option ds1 ds2 -> ds1 }) -}
b874b82243906a976b6714d10fe40b3d
  lessParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.lessParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
551fdaf0332789cada411d198fdd8817
  lessParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wlessParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
a2e1005cf23022f77673975ec080a21f
  lesseqParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.lesseqParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
ccaf22b5f41ebdcde76a3e85c75825de
  lesseqParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wlesseqParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
bb752b3d499ca4353b1a141d9d198e48
  lexeme ::
    Data.Attoparsec.Text.Internal.Parser a
    -> Data.Attoparsec.Text.Internal.Parser a
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.lexeme1
                  `cast`
                (forall (a :: <*>_N).
                 <Data.Attoparsec.Text.Internal.Parser a>_R
                 ->_R Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                               <Data.Text.Internal.Text>_N <a>_R)) -}
98eec77b4784d7bff9b5fd41de568186
  lexeme1 ::
    Data.Attoparsec.Text.Internal.Parser a
    -> forall r.
       Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
       -> Data.Attoparsec.Internal.Types.Pos
       -> Data.Attoparsec.Internal.Types.More
       -> Data.Attoparsec.Internal.Types.Failure
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            r
       -> Data.Attoparsec.Internal.Types.Success
            Data.Text.Internal.Text
            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
            a
            r
       -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 6,
     Strictness: <L,C(C1(C1(C1(C1(U)))))><S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ a
                   (w :: Data.Attoparsec.Text.Internal.Parser a)
                   @ r
                   (w1 :: Data.Attoparsec.Internal.Types.State
                            Data.Text.Internal.Text)
                   (w2 :: Data.Attoparsec.Internal.Types.Pos)
                   (w3 :: Data.Attoparsec.Internal.Types.More)
                   (w4 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w5 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            a
                            r) ->
                 case w1
                        `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w2
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wlexeme @ a w @ r ww1 ww2 ww3 ww4 ww5 ww7 w3 w4 w5 } }) -}
092f6c16af2fc355c4e96af250f3b1b6
  minusParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.minusParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
734caff173b8d1fe15fac6567cb022d8
  minusParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wminusParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
660808edeb4039c7fd5b9a1be86e0f40
  multParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.multParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
15ebdc7e973129df89f147e02152c1ec
  multParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wmultParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
b5f1273ef5ea8c76dea2fa8c92138056
  nilParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lib.nilParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
b623abec6935590cb35419461e1ebad1
  nilParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wnilParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
25f8dafe658f70750b82ba4e213bd682
  notParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.notParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
6be9ad985faf228df7b49f0c8efa61d4
  notParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wnotParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
7b0f5264bf3325e7c2124128c3141673
  numParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.numParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
9bc71b260c8a55fb9a1b38820246da8b
  numParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,C(C1(C1(C1(C1(U)))))><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wnumParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
f2d93871a5a3755828925fa63afca5ec
  orParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.orParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
982adc39af19b269dce35f9e73c42b4d
  orParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$worParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
03c6bdcc810bfea555432e7ad302df34
  outPath :: Lib.Option -> GHC.Base.String
  RecSel Left Lib.Option
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Option) ->
                 case ds of wild { Lib.Option ds1 ds2 -> ds2 }) -}
30cb13d31293336e67be7532542e0194
  parseField :: GHC.Base.String -> Lib.Parser1 GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseField1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Trans
                          (<[GHC.Base.String]>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <(GHC.Base.String, [GHC.Base.String])>_R))
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <[GHC.Base.String]>_N <GHC.Types.IO>_R <GHC.Base.String>_N))) -}
8896b2cf0b041bbd64494a624290f219
  parseField1 ::
    GHC.Base.String
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, [GHC.Base.String]) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>,
     Unfolding: (\ (f :: GHC.Base.String)
                   (eta :: [GHC.Base.String])
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case eta of wild {
                   []
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ (GHC.Base.String, [GHC.Base.String])
                        Lib.defMain20
                        eta1
                   : arg args'
                   -> case GHC.Base.eqString
                             arg
                             (GHC.CString.unpackAppendCString# "--"# f) of wild1 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ (GHC.Base.String, [GHC.Base.String])
                             Lib.defMain20
                             eta1
                        GHC.Types.True
                        -> case args' of wild2 {
                             []
                             -> GHC.IO.failIO1
                                  @ (GHC.Base.String, [GHC.Base.String])
                                  GHC.Base.$fAlternativeIO3
                                  eta1
                             : arg1 args'1 -> (# eta1, (arg1, args'1) #) } } }) -}
934302dc75db2e53fe3098bd8233372f
  parseFlag :: GHC.Base.String -> Lib.Parser1 GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseFlag1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Trans
                          (<[GHC.Base.String]>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <(GHC.Base.String, [GHC.Base.String])>_R))
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <[GHC.Base.String]>_N <GHC.Types.IO>_R <GHC.Base.String>_N))) -}
ea927cf328297493cc588b65f5848436
  parseFlag1 ::
    GHC.Base.String
    -> [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, [GHC.Base.String]) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>,
     Unfolding: (\ (f :: GHC.Base.String)
                   (eta :: [GHC.Base.String])
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case eta of wild {
                   []
                   -> GHC.IO.failIO1
                        @ (GHC.Base.String, [GHC.Base.String])
                        GHC.Base.$fAlternativeIO3
                        eta1
                   : arg args'
                   -> case GHC.Base.eqString
                             arg
                             (GHC.CString.unpackAppendCString# "--"# f) of wild1 {
                        GHC.Types.False
                        -> GHC.IO.failIO1
                             @ (GHC.Base.String, [GHC.Base.String])
                             GHC.Base.$fAlternativeIO3
                             eta1
                        GHC.Types.True -> (# eta1, (f, args') #) } }) -}
5db20662cc98589e65a474e863a34ab5
  parseInPath :: Lib.Parser1 GHC.Base.String
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Lib.parseInPath1
                  `cast`
                (Trans
                     (<[GHC.Base.String]>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(GHC.Base.String, [GHC.Base.String])>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <[GHC.Base.String]>_N <GHC.Types.IO>_R <GHC.Base.String>_N))) -}
760240488e3354d2df633ba78db3e067
  parseInPath1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, [GHC.Base.String]) #)
  {- Arity: 2, Unfolding: (Lib.parseField1 Lib.defMain19) -}
86a95014f69c4a558eb35ae28cd1ee96
  parseOption :: Lib.Parser1 Lib.Option
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.defMain15
                  `cast`
                (Trans
                     (<[GHC.Base.String]>_R
                      ->_R Sym (GHC.Types.N:IO[0] <(Lib.Option, [GHC.Base.String])>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <[GHC.Base.String]>_N <GHC.Types.IO>_R <Lib.Option>_N))) -}
79818d11c654527103d0496e94d06e66
  parseOutPath :: Lib.Parser1 GHC.Base.String
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Lib.parseOutPath1
                  `cast`
                (Trans
                     (<[GHC.Base.String]>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(GHC.Base.String, [GHC.Base.String])>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <[GHC.Base.String]>_N <GHC.Types.IO>_R <GHC.Base.String>_N))) -}
c639e01070ac170f4125d6bf33460093
  parseOutPath1 ::
    [GHC.Base.String]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, [GHC.Base.String]) #)
  {- Arity: 2, Unfolding: (Lib.parseField1 Lib.defMain17) -}
35617b48dd5eda3f142ecfd3d3479bb9
  setParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.setParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
4c85893e0efdab9dc24677486e69882d
  setParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wsetParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
e750c94065392137ca16d95d68df4d41
  skipParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lib.skipParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
6531fe19428c8bffe2e668451838e70b
  skipParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wskipParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
8d9148ca9c2ad85f3afef1b452b62517
  statParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.statParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
c7ec18b0cda70f96083b6ee7f121fdff
  statParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),U(U)><L,U><L,U><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wstatParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
00f21daf48cefe60b20e1b12e8a5b740
  stringParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.stringParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
013851e3f6413faf654d099aaeb7e7f7
  stringParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wstringParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
4173aff9dcfdd78b6f5a7be6bbbc2e81
  testResult :: Lib.MyResult -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.MyResult) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Lib.BoolResult ds1 -> ds1 }) -}
a49103076f91e14a9ece72718ecbbb73
  trans :: [GHC.Types.Char] -> Lib.Expr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
03e23512db4c471fa63005e69c7eef24
  trueParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lib.trueParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
5d85e8f898ecea08d07868849a7af134
  trueParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Unfolding: (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wgo1
                   @ r
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww7
                   w2
                   (\ (t' :: Data.Attoparsec.Internal.Types.State
                               Data.Text.Internal.Text)
                      (pos' :: Data.Attoparsec.Internal.Types.Pos)[OneShot]
                      (more' :: Data.Attoparsec.Internal.Types.More)[OneShot]
                      (a1 :: ())[OneShot] ->
                    case pos'
                           `cast`
                         (Data.Attoparsec.Internal.Types.N:Pos[0]) of nt1 { GHC.Types.I# ipv1 ->
                    case t'
                           `cast`
                         (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww8 { Data.Attoparsec.Text.Buffer.Buf ww9 ww10 ww11 ww12 ww13 ->
                    Lib.$wtrueParser
                      @ r
                      ww9
                      ww10
                      ww11
                      ww12
                      ww13
                      ipv1
                      more'
                      w3
                      w4 } }) } }) -}
f0b42528bbb0847c1421dbd716135d0f
  variableParser :: Data.Attoparsec.Text.Internal.Parser Lib.Expr
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.variableParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Expr>_R)) -}
75acf677cb4594ec019e304dd72f853b
  variableParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Expr
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Expr
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wvariableParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w4 } }) -}
9223d229a0a8f5b8285b35b1b20cc14a
  variableonlyParser :: Data.Attoparsec.Text.Internal.Parser Lib.Var
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.variableonlyParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Var>_R)) -}
aa1acf51b37aeb36a7ac30515e5211b1
  variableonlyParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Var
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,A><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Var
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wvariableonlyParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w4 } }) -}
afd7fcbfe68eaabf5947833015e67090
  whileParser :: Data.Attoparsec.Text.Internal.Parser Lib.Statment
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Unfolding: InlineRule (0, True, True)
                Lib.whileParser1
                  `cast`
                (Sym (Data.Attoparsec.Internal.Types.N:Parser[0]
                          <Data.Text.Internal.Text>_N <Lib.Statment>_R)) -}
bb6ee210a63996dcdbd69115d7065e69
  whileParser1 ::
    Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text
    -> Data.Attoparsec.Internal.Types.Pos
    -> Data.Attoparsec.Internal.Types.More
    -> Data.Attoparsec.Internal.Types.Failure
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         r
    -> Data.Attoparsec.Internal.Types.Success
         Data.Text.Internal.Text
         (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
         Lib.Statment
         r
    -> Data.Attoparsec.Internal.Types.IResult Data.Text.Internal.Text r
  {- Arity: 5,
     Strictness: <S(SSSLL),1*U(U,U,U,U,U)><S(S),1*U(U)><L,U><L,U><L,C(C1(C1(C1(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ r
                   (w :: Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                   (w1 :: Data.Attoparsec.Internal.Types.Pos)
                   (w2 :: Data.Attoparsec.Internal.Types.More)
                   (w3 :: Data.Attoparsec.Internal.Types.Failure
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            r)
                   (w4 :: Data.Attoparsec.Internal.Types.Success
                            Data.Text.Internal.Text
                            (Data.Attoparsec.Internal.Types.State Data.Text.Internal.Text)
                            Lib.Statment
                            r) ->
                 case w `cast`
                      (Sub (Data.Attoparsec.Internal.Types.D:R:StateText[0])) of ww { Data.Attoparsec.Text.Buffer.Buf ww1 ww2 ww3 ww4 ww5 ->
                 case w1
                        `cast`
                      (Data.Attoparsec.Internal.Types.N:Pos[0]) of ww6 { GHC.Types.I# ww7 ->
                 Lib.$wwhileParser @ r ww1 ww2 ww3 ww4 ww5 ww7 w2 w3 w4 } }) -}
instance [safe] GHC.Show.Show [Lib.Expr] = Lib.$fShowExpr
instance [safe] GHC.Show.Show [Lib.MyResult] = Lib.$fShowMyResult
instance [safe] GHC.Show.Show [Lib.Option] = Lib.$fShowOption
instance [safe] GHC.Show.Show [Lib.Statment] = Lib.$fShowStatment
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

